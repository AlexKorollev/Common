{
  "bitwise"       : true,     // Prohibit bitwise operators (&, |, ^, etc.)
  "camelcase"     : true,     // Identifiers must be in camelCase
  "curly"         : true,     // Require {} for every new block or scope
  "eqeqeq"        : true,     // Require triple equals (===) for comparison
  "esversion"     : 6,        // Specify the ECMAScript version
  "forin"         : true,     // Require filtering for..in loops with obj.hasOwnProperty()
  "freeze"        : true,     // Prohibits overwriting prototypes of native objects such as Array, Date etc.
  "funcscope"     : true,     // Prohibits declaring variables inside of control structures while accessing them later from the outside.
  "immed"         : true,     // Require immediate invocations to be wrapped in parens e.g. `(function () { } ());`. Will be removed in next version
  "iterator"      : false,    // true: Tolerate using the `__iterator__` property
  "latedef"       : true,     // Require variables/functions to be defined before being used
  "maxcomplexity" : 5,        // {int} Max cyclomatic complexity per function
  "maxdepth"      : 4,        // {int} Max depth of nested blocks (within functions)
  "maxerr"        : 50,       // {int} Max amount of warnings (Default 50)
  "maxlen"        : 120,      // {int} Max number of characters per line. Will be removed in next version
  "maxparams"     : 5,        // {int} Max number of formal params allowed per function
  "maxstatements" : 20,       // {int} Max number statements per function
  "newcap"        : true,     // Require capitalization of all constructor functions e.g. `new F()`. Will be removed in next version
  "noarg"         : true,     // Prohibits use of `arguments.caller` and `arguments.callee`
  "nocomma"       : true,     // Prohibits the use of the comma operator
  "noempty"       : true,     // Prohibit use of empty blocks. Will be removed in next version
  "nonbsp"        : true,     // Prohibit "non-breaking whitespace" characters.
  "nonew"         : true,     // Prohibit use of constructors for side-effects (without assignment)
  "notypeof"      : false,    // true: Tolerate invalid typeof operator values
  "plusplus"      : false,    // Prohibit use of `++` and `--`
  "quotmark"      : false,    // Quotation mark consistency: (Will be removed in next version)
                              //   false    : do nothing (default)
                              //   true     : ensure whatever is used is consistent
                              //   "single" : require single quotes
                              //   "double" : require double quotes
  "shadow"        : false,    // true: Allows re-define variables later in code e.g. `var x=1; x=2;`
  "singleGroups"  : false,    //true: Prohibits the use of the grouping operator when it is not strictly required
  "strict"        : "global", //There must be a "use strict"; directive at global level
  "undef"         : true,     // Require all non-global variables to be declared (prevents global leaks)
  "unused"        : true,     // Warns when you define and never use variables
  "varstmt"       : true,     // Disallow any var statements. Only `let` and `const` are allowed.


  // Relaxing

  //When set to true, these options will make JSHint produce fewer warnings about your code.

  "asi"           : false,     // true: Tolerate Automatic Semicolon Insertion (no semicolons)
  "boss"          : false,     // true: Tolerate assignments where comparisons would be expected
  "debug"         : false,     // true: Allow debugger statements e.g. browser breakpoints.
  "elision"       : false,     // true: Code uses ES3 array elision elements, or empty elements (for example, [1, , , 4, , , 7])
  "eqnull"        : false,     // true: Tolerate use of `== null`
  "evil"          : false,     // true: Tolerate use of `eval` and `new Function()`
  "expr"          : false,     // true: Tolerate `ExpressionStatement` as Programs
  "lastsemic"     : false,     // true: Tolerate omitting a semicolon for the last statement of a 1-line block
  "laxbreak"      : false,     // true: Tolerate possibly unsafe line breakings (Will be removed in next version)
  "laxcomma"      : false,     // true: Tolerate comma-first style coding (Will be removed in next version)
  "loopfunc"      : false,     // true: Tolerate functions being defined in loops
  "multistr"      : false,     // true: Tolerate multi-line strings (Will be removed in next version)
  "noyield"       : false,     // true: Tolerate generator functions with no yield statement in them.
  "proto"         : false,     // true: Tolerate using the `__proto__` property
  "scripturl"     : false,     // true: Tolerate script-targeted URLs
  "sub"           : false,     // true: Tolerate using `[]` notation when it can still be expressed in dot notation (Will be removed in next version)
  "supernew"      : false,     // true: Tolerate `new function () { ... };` and `new Object;`
  "validthis"     : false,     // true: Tolerate using this in a non-constructor function
  "withstmt"      : false,     // true: Tolerate warnings about the use of the with statement

  // Environments

  //These options let JSHint know about some pre-defined global variables.

  "browser"       : false,     // Web Browser (window, document, etc)
  "browserify"    : false,     // Browserify (node.js code in the browser)
  "couch"         : false,     // CouchDB
  "devel"         : false,     // Development/debugging (alert, confirm, etc)
  "dojo"          : false,     // Dojo Toolkit
  "jasmine"       : false,     // Jasmine
  "jquery"        : false,     // jQuery
  "mocha"         : true,      // Mocha
  "mootools"      : false,     // MooTools
  "node"          : true,      // Node.js
  "nonstandard"   : false,     // Widely adopted globals (escape, unescape, etc)
  "phantom"       : false,     // PhantomJS
  "prototypejs"   : false,     // Prototype and Scriptaculous
  "qunit"         : false,     // QUnit
  "rhino"         : false,     // Rhino
  "shelljs"       : false,     // ShellJS
  "typed"         : false,     // Globals for typed array constructions
  "worker"        : false,     // Web Workers
  "wsh"           : false,     // Windows Scripting Host
  "yui"           : false,     // Yahoo User Interface

  // Custom Globals
  "globals"       : {}         // additional predefined global variables
}
